paths:
  /funckeys/destinations:
    get:
      operationId: list_func_key_destinations
      summary: List of possible func key destinations and their parameters
      description: '**Required ACL:** `confd.funckeys.destinations.read`'
      tags:
      - funckeys
      responses:
        '200':
          description: List of destinations
          schema:
            $ref: '#/definitions/FuncKeyDestinationItems'
  /funckeys/templates:
    get:
      operationId: list_func_key_template
      summary: List a func key template
      description: '**Required ACL:** `confd.funckeys.templates.read`'
      tags:
      - funckeys
      parameters:
        - $ref: '#/parameters/tenantuuid'
        - $ref: '#/parameters/recurse'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/search'
      responses:
        '200':
          description: List Func key template
          schema:
            $ref: '#/definitions/FuncKeyTemplate'
        '404':
          $ref: '#/responses/NotFoundError'
    post:
      operationId: create_func_key_template
      summary: Create a template of func keys
      description: '**Required ACL:** `confd.funckeys.templates.create`'
      tags:
      - funckeys
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - name: body
        in: body
        description: Template to create
        required: false
        schema:
          $ref: '#/definitions/FuncKeyTemplate'
      responses:
        '201':
          description: Template created
          schema:
            $ref: '#/definitions/FuncKeyTemplate'
        '400':
          $ref: '#/responses/CreateError'
  /funckeys/templates/{template_id}:
    get:
      operationId: get_func_key_template
      summary: Get a func key template
      description: '**Required ACL:** `confd.funckeys.templates.{template_id}.read`'
      tags:
      - funckeys
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/templateid'
      responses:
        '200':
          description: Func key template
          schema:
            $ref: '#/definitions/FuncKeyTemplate'
        '404':
          $ref: '#/responses/NotFoundError'
    put:
      operationId: update_func_key_template
      summary: Update a func key template
      description: '**Required ACL:** `confd.funckeys.templates.{template_id}.update`


        **WARNING** This endpoint restore to default value or delete all fields that
        are not defined.'
      tags:
      - funckeys
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/templateid'
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/FuncKeyTemplate'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
    delete:
      operationId: delete_func_key_template
      summary: Delete func key template
      description: '**Required ACL:** `confd.funckeys.templates.{template_id}.delete`'
      tags:
      - funckeys
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/templateid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
  /funckeys/templates/{template_id}/users:
    get:
      operationId: list_func_key_template_user_associations
      summary: List users associated to template
      description: '**Required ACL:** `confd.funckeys.templates.{template_id}.users.read`'
      tags:
      - funckeys
      - users
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/templateid'
      responses:
        '200':
          description: User-FuncKeyTemplate associations
          schema:
            $ref: '#/definitions/UserFuncKeyTemplate'
        '404':
          $ref: '#/responses/NotFoundError'
  /funckeys/templates/{template_id}/{position}:
    get:
      operationId: get_func_key
      summary: Get a func key inside template
      description: '**Required ACL:** `confd.funckeys.templates.{template_id}.{position}.read`'
      tags:
      - funckeys
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/templateid'
      - $ref: '#/parameters/funckeyposition'
      responses:
        '200':
          description: Func key
          schema:
            $ref: '#/definitions/FuncKey'
        '404':
          $ref: '#/responses/NotFoundError'
    put:
      operationId: update_func_key
      summary: Add/Replace a func key in a template
      description: '**Required ACL:** `confd.funckeys.templates.{template_id}.{position}.update`'
      tags:
      - funckeys
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/templateid'
      - $ref: '#/parameters/funckeyposition'
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/FuncKey'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
    delete:
      operationId: delete_func_key
      summary: Remove func key from template
      description: '**Required ACL:** `confd.funckeys.templates.{template_id}.{position}.delete`'
      tags:
      - funckeys
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/templateid'
      - $ref: '#/parameters/funckeyposition'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
  /users/{user_id}/funckeys:
    get:
      operationId: list_user_func_keys
      summary: List func keys for a user
      description: '**Required ACL:** `confd.users.{user_id}.funckeys.read`'
      tags:
      - funckeys
      - users
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/useriduuid'
      responses:
        '200':
          description: Func keys for user
          schema:
            $ref: '#/definitions/FuncKeyTemplate'
    put:
      operationId: update_user_func_keys
      summary: Update func keys for a user
      description: '**Required ACL:** `confd.users.{user_id}.funckeys.update`


        **WARNING** This endpoint restore to default value or delete all fields that
        are not defined.'
      tags:
      - funckeys
      - users
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/useriduuid'
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/FuncKeyTemplate'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
  /users/{user_id}/funckeys/{position}:
    get:
      operationId: get_user_func_key
      summary: Get a func key for a user
      description: '**Required ACL:** `confd.users.{user_id}.funckeys.{position}.read`'
      tags:
      - funckeys
      - users
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/useriduuid'
      - $ref: '#/parameters/funckeyposition'
      responses:
        '200':
          description: Func key
          schema:
            $ref: '#/definitions/FuncKey'
        '404':
          $ref: '#/responses/NotFoundError'
    put:
      operationId: update_user_func_key
      summary: Add/Replace a func key for a user
      description: '**Required ACL:** `confd.users.{user_id}.funckeys.{position}.update`'
      tags:
      - funckeys
      - users
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/useriduuid'
      - $ref: '#/parameters/funckeyposition'
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/FuncKey'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
    delete:
      operationId: delete_user_func_key
      summary: Remove func key for user
      description: '**Required ACL:** `confd.users.{user_id}.funckeys.{position}.delete`'
      tags:
      - funckeys
      - users
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/useriduuid'
      - $ref: '#/parameters/funckeyposition'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
  /users/{user_id}/funckeys/templates:
    get:
      operationId: list_user_func_key_template_associations
      summary: List funckey templates associated to user
      description: '**Required ACL:** `confd.users.{user_id}.funckeys.templates.read`'
      tags:
      - funckeys
      - users
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/useriduuid'
      responses:
        '200':
          description: User-FuncKeyTemplate associations
          schema:
            $ref: '#/definitions/UserFuncKeyTemplate'
        '404':
          $ref: '#/responses/NotFoundError'
  /users/{user_id}/funckeys/templates/{template_id}:
    put:
      operationId: associate_user_func_key_template
      summary: Associate a func key template to a user
      description: '**Required ACL:** `confd.users.{user_id}.funckeys.templates.{template_id}.update`'
      tags:
      - funckeys
      - users
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/useriduuid'
      - $ref: '#/parameters/templateid'
      responses:
        '204':
          description: User and template associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
    delete:
      operationId: dissociate_user_func_key_template
      summary: Dissociate a func key template to a user
      description: '**Required ACL:** `confd.users.{user_id}.funckeys.templates.{template_id}.delete`'
      tags:
      - funckeys
      - users
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/useriduuid'
      - $ref: '#/parameters/templateid'
      responses:
        '204':
          description: User and template dissociated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'

parameters:
  funckeyposition:
    required: true
    type: integer
    name: position
    in: path
    description: position of the funckey
  templateid:
    required: true
    type: integer
    name: template_id
    in: path

definitions:
  FuncKey:
    title: FuncKey
    description: Further documentation at https://wazo-platform.org/uc-doc/api_sdk/rest_api/confd/func_keys
    properties:
      blf:
        type: boolean
      label:
        type: string
      destination:
        type: object
  FuncKeyDestination:
    title: FuncKeyDestination
    properties:
      type:
        type: string
      parameters:
        items:
          $ref: '#/definitions/FuncKeyDestinationParameter'
        type: array
  FuncKeyDestinationParameter:
    title: FuncKeyDestinationParameter
    properties:
      name:
        type: string
        description: Parameter name
      collection:
        type: string
        description: URL towards a collection of entities representing possible values
          as a destination
      values:
        description: Array of values to choose from for this parameter
        items:
          type: string
        type: array
  FuncKeyDestinationItems:
    title: FuncKeyDestinationItems
    description: Description of func key destinations and their parameters
    items:
      $ref: '#/definitions/FuncKeyDestination'
    type: array
  FuncKeyTemplate:
    title: FuncKeyTemplate
    description: Further documentation at https://wazo-platform.org/uc-doc/administration/users/csv_import
    properties:
      id:
        type: integer
        description: The ID of the funckey template
        readOnly: true
      tenant_uuid:
        type: string
        description: The UUID of the tenant
        readOnly: true
      name:
        type: string
      keys:
        type: object
  UserFuncKeyTemplate:
    title: UserFuncKeyTemplate
    description: Association between a User and a FuncKey Template
    properties:
      user_id:
        type: integer
        format: int32
        description: User's ID
      template_id:
        type: integer
        format: int32
        description: FuncKey Template's ID
