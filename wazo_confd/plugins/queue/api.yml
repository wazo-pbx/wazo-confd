paths:
  /queues:
    get:
      operationId: list_queues
      summary: List queues
      description: '**Required ACL:** `confd.queues.read`'
      tags:
      - queues
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: Queues list
          schema:
            $ref: '#/definitions/QueueItems'
    post:
      operationId: create_queue
      summary: Create queue
      description: '**Required ACL:** `confd.queues.create`'
      tags:
      - queues
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - name: body
        in: body
        description: Queue to create
        required: true
        schema:
          $ref: '#/definitions/Queue'
      responses:
        '201':
          description: Queue created
          schema:
            $ref: '#/definitions/Queue'
        '400':
          $ref: '#/responses/CreateError'
  /queues/{queue_id}:
    get:
      operationId: get_queue
      summary: Get queue
      description: '**Required ACL:** `confd.queues.{queue_id}.read`'
      tags:
      - queues
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/queueid'
      responses:
        '200':
          description: Queue
          schema:
            $ref: '#/definitions/Queue'
        '404':
          $ref: '#/responses/NotFoundError'
    put:
      operationId: update_queue
      summary: Update queue
      description: '**Required ACL:** `confd.queues.{queue_id}.update`'
      tags:
      - queues
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/queueid'
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/Queue'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
    delete:
      operationId: delete_queue
      summary: Delete queue
      description: '**Required ACL:** `confd.queues.{queue_id}.delete`'
      tags:
      - queues
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/queueid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
parameters:
  queueid:
    required: true
    type: integer
    name: queue_id
    in: path
    description: queue's ID
definitions:
  Queue:
    title: Queue
    allOf:
    - $ref: '#/definitions/QueueRelationBase'
    - properties:
        data_quality:
          type: boolean
          default: false
          description: "Asterisk definition: data-quality (modem) call (minimum delay)"
        dtmf_hangup_callee_enabled:
          type: boolean
          default: false
          description: Enable DTMF hangup by callee
        dtmf_hangup_caller_enabled:
          type: boolean
          default: false
          description: Enable DTMF hangup by caller
        dtmf_transfer_callee_enabled:
          type: boolean
          default: false
          description: Enable DTMF transfers by callee
        dtmf_transfer_caller_enabled:
          type: boolean
          default: false
          description: Enable DTMF transfers by caller
        dtmf_record_callee_enabled:
          type: boolean
          default: false
          description: Enable DTMF records by callee
        dtmf_record_caller_enabled:
          type: boolean
          default: false
          description: Enable DTMF records by caller
        dtmf_record_toggle:
          type: boolean
          default: false
          description: Enable/Disable DTMF recording for members of this queue receiving a call from this queue
        retry_on_timeout:
          type: boolean
          default: true
          description: Retry when time has elapsed
        ring_on_hold:
          type: boolean
          default: false
          description: Ring instead of On-Hold Music
        timeout:
          type: integer
          description: Number of seconds the queue will ring before falling back
        announce_hold_time_on_entry:
          type: boolean
          default: false
          description: Announce hold time on entry
        ignore_forward:
          type: boolean
          default: false
          description: Ignore call forward requests from members
        preprocess_subroutine:
          type: string
        music_on_hold:
          type: string
          description: Name of the MOH category to use for music on hold
        wait_time_threshold:
          type: integer
          description: Wait time threshold before fallback on 'wait_time_destination'. Set to 'null' to disable it.
        wait_time_destination:
          $ref: '#/definitions/DestinationType'
          description: Go to that destination when 'wait_time_threshold' is reached
        wait_ratio_threshold:
          type: integer
          description: Wait ratio (waiting calls per logged-in agent) threshold before fallback on 'wait_ratio_destination'. Set to 'null' to disable it.
        wait_ratio_destination:
          $ref: '#/definitions/DestinationType'
          description: Go to that destination when 'wait_ratio_threshold' is reached
        caller_id_mode:
          type: string
          enum:
          - prepend
          - overwrite
          - append
          description: How the caller_id_name will be treated
        caller_id_name:
          type: string
          description: Name to display
        mark_answered_elsewhere:
          type: boolean
          default: true
          description: Mark all calls as "answered elsewhere" when cancelled
        enabled:
          type: boolean
          default: true
          description: Enable/Disable the queue
        options:
          description: |
            Advanced configuration options. Options are appended at the end of
            a queue account in the file 'queues.conf' used by asterisk. Please
            consult the asterisk documentation for further details on available
            parameters. Because of database limitations, only the following
            options can be configured:

            * announce
            * context
            * timeout
            * monitor-type
            * monitor-format
            * queue-youarenext
            * queue-thereare
            * queue-callswaiting
            * queue-holdtime
            * queue-minutes
            * queue-seconds
            * queue-thankyou
            * queue-reporthold
            * periodic-announce
            * announce-frequency
            * periodic-announce-frequency
            * announce-round-seconds
            * announce-holdtime
            * retry
            * wrapuptime
            * maxlen
            * servicelevel
            * strategy
            * joinempty
            * leavewhenempty
            * ringinuse
            * reportholdtime
            * memberdelay
            * weight
            * timeoutrestart
            * timeoutpriority
            * autofill
            * autopause
            * setinterfacevar
            * setqueueentryvar
            * setqueuevar
            * membermacro
            * min-announce-frequency
            * random-periodic-announce
            * announce-position
            * announce-position-limit
            * defaultrule

            Options must have the following form:
            ```
            {
              "options": [
                 ["name1", "value1"],
                 ["name2", "value2"]
              ]
            }
            ```

            The resulting configuration in queues.conf will have the following form:
            ```
            [queuename]
            name1=value1
            name2=value2
            ```
          type: array
          items:
            $ref: '#/definitions/KeyValueOption'
          default: []
        tenant_uuid:
          type: string
          description: The UUID of the tenant
          readOnly: true
    - $ref: '#/definitions/QueueRelationSchedules'
    - $ref: '#/definitions/QueueRelationMembers'
    - required:
      - name
  QueueRelationBase:
    properties:
      id:
        type: integer
        readOnly: true
        description: The id of the queue
      name:
        type: string
        description: The name of the queue. Cannot be modified
      label:
        type: string
        description: The label of the queue
  QueueRelationSchedules:
    properties:
      schedules:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/ScheduleRelationBase'
  QueueRelationMembers:
    properties:
      members:
        readOnly: true
        $ref: '#/definitions/QueueRelationMemberAgents'
  QueueRelationMemberAgents:
    properties:
      agents:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/QueueRelationMemberAgent'
      users:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/QueueRelationMemberUser'
  QueueRelationMemberAgent:
    allOf:
    - $ref: '#/definitions/AgentRelationBase'
    - $ref: '#/definitions/QueueMemberAgentRelationBase'
  QueueRelationMemberUser:
    allOf:
    - $ref: '#/definitions/UserRelationBase'
    - $ref: '#/definitions/QueueMemberUserRelationBase'
  QueueItems:
    title: QueueItems
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/Queue'
      total:
        type: integer
    required:
    - total
